<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="AllieTanksDesign.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>